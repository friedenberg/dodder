// Code generated by "stringer -type=Binary"; DO NOT EDIT.

package key_bytes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[ContentLength-67]
	_ = x[Sigil-83]
	_ = x[Blob-65]
	_ = x[RepoPubKey-80]
	_ = x[RepoSig-113]
	_ = x[Description-66]
	_ = x[Tag-69]
	_ = x[Genre-71]
	_ = x[ObjectId-75]
	_ = x[Comment-107]
	_ = x[Tai-84]
	_ = x[Type-116]
	_ = x[SigParentMetadataParentObjectId-77]
	_ = x[DigestMetadataParentObjectId-115]
	_ = x[DigestMetadataWithoutTai-110]
	_ = x[DigestMetadata-109]
	_ = x[CacheParentTai-112]
	_ = x[CacheDormant-97]
	_ = x[CacheTagImplicit-73]
	_ = x[CacheTagExpanded-101]
	_ = x[CacheTags-120]
	_ = x[CacheTags2-121]
}

const _Binary_name = "UnknownBlobDescriptionContentLengthTagGenreCacheTagImplicitObjectIdSigParentMetadataParentObjectIdRepoPubKeySigilTaiCacheDormantCacheTagExpandedCommentDigestMetadataDigestMetadataWithoutTaiCacheParentTaiRepoSigDigestMetadataParentObjectIdTypeCacheTagsCacheTags2"

var _Binary_map = map[Binary]string{
	0:   _Binary_name[0:7],
	65:  _Binary_name[7:11],
	66:  _Binary_name[11:22],
	67:  _Binary_name[22:35],
	69:  _Binary_name[35:38],
	71:  _Binary_name[38:43],
	73:  _Binary_name[43:59],
	75:  _Binary_name[59:67],
	77:  _Binary_name[67:98],
	80:  _Binary_name[98:108],
	83:  _Binary_name[108:113],
	84:  _Binary_name[113:116],
	97:  _Binary_name[116:128],
	101: _Binary_name[128:144],
	107: _Binary_name[144:151],
	109: _Binary_name[151:165],
	110: _Binary_name[165:189],
	112: _Binary_name[189:203],
	113: _Binary_name[203:210],
	115: _Binary_name[210:238],
	116: _Binary_name[238:242],
	120: _Binary_name[242:251],
	121: _Binary_name[251:261],
}

func (i Binary) String() string {
	if str, ok := _Binary_map[i]; ok {
		return str
	}
	return "Binary(" + strconv.FormatInt(int64(i), 10) + ")"
}
